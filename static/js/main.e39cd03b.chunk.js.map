{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pagesNumber","Math","ceil","pages","ifFirst","ifCur","thisPage","ifLast","className","classNames","disabled","onClick","href","map","page","active","items","App","useState","setPerPage","setCurrentPage","startValue","endValue","pagesPerPage","slice","id","onChange","event","target","value","selected","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yLACO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCGIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAcC,KAAKC,KAAKN,EAAQC,GAChCM,EAAQd,EAAW,EAAGW,GACtBI,EAAU,kBAAsB,IAAhBN,GAChBO,EAAQ,SAACC,GAAD,OAAsBR,IAAgBQ,GAC9CC,EAAS,kBAAMT,IAAgBE,GAErC,OACE,qBAAIQ,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YACA,CAAEC,SAAUN,MAFd,SAKE,mBACEO,QAAS,WACFP,KACHL,EAAaD,EAAc,IAG/B,UAAQ,WACRU,UAAU,YACVI,KAAK,QACL,gBAAeR,IATjB,oBAeDD,EAAMU,KAAI,SAAAC,GAAI,OACb,oBAEEN,UAAWC,IACT,YACA,CAAEM,OAAQV,EAAMS,KAJpB,SAOE,mBACEH,QAAS,WACFN,EAAMS,IACTf,EAAae,IAGjB,UAAQ,WACRN,UAAU,YACVI,KAAI,WAAME,GARZ,SAUGA,KAhBEA,MAqBT,oBAAIN,UAAWC,IACb,YACA,CAAEC,SAAUH,MAFd,SAKE,mBACEI,QAAS,WACFJ,KACHR,EAAaD,EAAc,IAG/B,UAAQ,WACRU,UAAU,YACVI,KAAK,QACL,gBAAed,IAAgBE,EATjC,wBClEFgB,EAAQ3B,EAAW,EAAG,IACzBwB,KAAI,SAAApB,GAAC,qBAAYA,MAEPwB,EAAgB,WAC3B,IACA,EAA8BC,mBAAS,GAAvC,mBAAOrB,EAAP,KAAgBsB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOpB,EAAP,KAAoBsB,EAApB,KACMC,EAAaxB,EAAUC,GAAeD,EAAU,GAChDyB,EAAWzB,EAAUC,GAJb,GAKVD,EAAUC,EALA,GAORyB,EAAeP,EAAMQ,MAAMH,EAAa,EAAGC,GAEjD,OACE,sBAAKd,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWV,EADX,mBACiCuB,EADjC,cACiDC,EADjD,eAbU,GAaV,OAIA,sBAAKd,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRiB,GAAG,kBACHjB,UAAU,eACVkB,SAAU,SAACC,GACTR,GAAYQ,EAAMC,OAAOC,OACzBT,EAAe,IANnB,UASE,wBAAQS,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAIC,UAAQ,EAA1B,eACA,wBAAQD,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOE,QAAQ,kBAAkBvB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEZ,MAzCQ,GA0CRC,QAASA,EACTC,YAAaA,EACbC,aAAc,SAACe,GACbM,EAAeN,MAInB,6BACGS,EAAaV,KAAI,SAAAmB,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YC7DjBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e39cd03b.chunk.js","sourcesContent":["//  eslint-disable-next-line\nexport function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\n\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pagesNumber = Math.ceil(total / perPage);\n  const pages = getNumbers(1, pagesNumber);\n  const ifFirst = () => currentPage === 1;\n  const ifCur = (thisPage: number) => currentPage === thisPage;\n  const ifLast = () => currentPage === pagesNumber;\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames(\n        'page-item',\n        { disabled: ifFirst() },\n      )}\n      >\n        <a\n          onClick={() => {\n            if (!ifFirst()) {\n              onPageChange(currentPage - 1);\n            }\n          }}\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={ifFirst()}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map(page => (\n        <li\n          key={page}\n          className={classNames(\n            'page-item',\n            { active: ifCur(page) },\n          )}\n        >\n          <a\n            onClick={() => {\n              if (!ifCur(page)) {\n                onPageChange(page);\n              }\n            }}\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={classNames(\n        'page-item',\n        { disabled: ifLast() },\n      )}\n      >\n        <a\n          onClick={() => {\n            if (!ifLast()) {\n              onPageChange(currentPage + 1);\n            }\n          }}\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === pagesNumber}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\n\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const total = 42;\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const startValue = perPage * currentPage - (perPage - 1);\n  const endValue = perPage * currentPage <= total\n    ? perPage * currentPage\n    : total;\n  const pagesPerPage = items.slice(startValue - 1, endValue);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startValue} - ${endValue} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={(event) => {\n              setPerPage(+event.target.value);\n              setCurrentPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\" selected>5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={(page: number) => {\n          setCurrentPage(page);\n        }}\n      />\n\n      <ul>\n        {pagesPerPage.map(item => (\n          <li\n            data-cy=\"item\"\n            key={item}\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}